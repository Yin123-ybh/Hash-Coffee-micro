<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coffee.couponservice.mapper.UserCouponMapper">

    <resultMap id="BaseResultMap" type="com.coffee.couponservice.entity.UserCoupon">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="coupon_id" property="couponId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="used_time" property="usedTime" jdbcType="TIMESTAMP"/>
        <result column="order_id" property="orderId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, coupon_id, status, used_time, order_id, create_time
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_coupons
        WHERE id = #{id}
    </select>

    <select id="selectByUserIdAndCouponId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_coupons
        WHERE user_id = #{userId} AND coupon_id = #{couponId}
    </select>

    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_coupons
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
    </select>

    <insert id="insert" parameterType="com.coffee.couponservice.entity.UserCoupon" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_coupons (
            user_id, coupon_id, status, used_time, order_id, create_time
        ) VALUES (
            #{userId}, #{couponId}, #{status}, #{usedTime}, #{orderId}, NOW()
        )
    </insert>

    <update id="updateStatus">
        UPDATE user_coupons
        SET status = #{status},
            used_time = CASE WHEN #{status} = 1 THEN NOW() ELSE used_time END,
            order_id = #{orderId}
        WHERE id = #{id}
    </update>

    <delete id="deleteByUserIdAndCouponId">
        DELETE FROM user_coupons 
        WHERE user_id = #{userId} AND coupon_id = #{couponId}
    </delete>

</mapper>
